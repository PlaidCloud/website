name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch to deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install autoprexir
        run: npm install autoprefixer -D --save --ignore-scripts

      - name: Install postcss-cli
        run: npm install -D --save postcss-cli

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCS_HUGO_SA_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Build
        run: hugo --minify

      # Login to gcloud and export credentials
      # - name: GCS Login
      #   uses: google-github-actions/setup-gcloud@master
      #   with:
      #     project_id: ${{ secrets.GCP_SA_PROJECT }}
      #     service_account_key: ${{ secrets.GCP_SA_KEY }}
      #     export_default_credentials: true

      - name: Deploy
        run: hugo deploy --target="hugo-gcs" --invalidateCDN --maxDeletes -1

      # - name: Create tag
      #   id: docker_tag
      #   run: |
      #     commit_tag=${GITHUB_SHA:0:7}
      #     echo "::set-output name=tag::${commit_tag}-${{ github.run_number }}"
# 
      # - name: Verify tag
      #   run: echo ${{ steps.docker_tag.outputs.tag }}
# 
      # - name: Login to GCR
      #   uses: docker/login-action@v1 
      #   with:
      #     registry: gcr.io
      #     username: _json_key
      #     password: ${{ secrets.GCR_JSON_KEY }}
# 
      # - name: Build and push
      #   # docker build -t gcr.io/plaidcloud-build/website:latest --pull --build-arg PLAID_BUILD_TAG={tag} --no-cache .
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     pull: true
      #     no-cache: true
      #     build-args: |
      #       PLAID_BUILD_TAG:${{ steps.docker_tag.outputs.tag }}
      #     tags: gcr.io/plaidcloud-build/website:latest,gcr.io/plaidcloud-build/website:${{ steps.docker_tag.outputs.tag }}
      #     
      # - name: Deploy
      #   uses: peaceiris/actions-gh-pages@v3
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./public
